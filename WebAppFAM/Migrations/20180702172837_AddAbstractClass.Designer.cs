// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using Microsoft.EntityFrameworkCore.ValueGeneration;
using System;
using WebAppFAM.Models;

namespace WebAppFAM.Migrations
{
    [DbContext(typeof(WebAppFAMContext))]
    [Migration("20180702172837_AddAbstractClass")]
    partial class AddAbstractClass
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebAppFAM.Models.Vehicle", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("FleetNo")
                        .IsRequired()
                        .HasMaxLength(6);

                    b.Property<DateTime>("InsuranceExpiry");

                    b.Property<DateTime>("LicenseExpiry");

                    b.Property<string>("RegistrationNumber")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("VinNo")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("ID");

                    b.ToTable("Vehicle");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Vehicle");
                });

            modelBuilder.Entity("WebAppFAM.Models.Horse", b =>
                {
                    b.HasBaseType("WebAppFAM.Models.Vehicle");

                    b.Property<string>("GPSUnitNo")
                        .HasMaxLength(20);

                    b.Property<string>("PhoneNo")
                        .HasMaxLength(10);

                    b.ToTable("Horse");

                    b.HasDiscriminator().HasValue("Horse");
                });
#pragma warning restore 612, 618
        }
    }
}
