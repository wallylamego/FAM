@page "{tripId?}"
@model WebAppFAM.Pages.Trips.TripModel
@{
    ViewData["Title"] = "Trip";
    Layout = "~/Pages/_LayoutDataTables.cshtml";
}

@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@functions{
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Model.HttpContext).RequestToken;
    }
}

<h2>Trip</h2>
<p>
    <a asp-page="TripMain">Trip Listing</a>
</p>
<div id="accordion">
    <div class="card" id="cardSection1">
        <div class="card-header" id="headingOne">
            <h5 class="mb-0">
                <button class="btn-primary" data-toggle="collapse" data-target="#collapseOne" aria-expanded="true"
                        aria-controls="collapseOne" style="background-color:darkred; border:outset; font-size:medium; border-color:white">
                    Section 1: Trip No,  Status,  Destination, Customer
                </button>
            </h5>
        </div>
        <div id="collapseOne" class="collapse" aria-labelledby="headingOne" data-parent="#accordion">
            <div class="row" id="divDestinationForm">
                <div class="col-md-4">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input type="hidden" asp-for="Trip.TripID" id="tripId" />
                    <input type="hidden" asp-for="Trip.DestinationID" id="destinationID" />
                    <div class="form-group" id="divTripCode">
                        <label class="control-label">Trip Number</label>
                        <input asp-for="Trip.TripCode" id="tripCode" class="form-control" />
                        <span asp-validation-for="Trip.TripCode" class="text-danger"></span>
                    </div>

                    <div class="input-group" id="divDestBtns">
                        <span class="input-group-btn">
                            <input type="button" value="Find Dest." class="btn btn-default" id="findDestinationBtn" />
                        </span>
                        <span class="input-group-btn">
                            <input type="button" value="Show Dest." class="btn btn-default" id="showDestinationBtn" />
                        </span>
                    </div>
                    <br />
                    <div id="divDestinationInputFieldsSection" class="well-sm" style="background-color:lightgray">
                        <div class="form-group" id="divCustomer">
                            <label class="control-label">Customer Name</label>
                            <input asp-for="Trip.Destination.Customer.Name" id="customerName" class="form-control" />
                            <span asp-validation-for="Trip.Destination.Customer.Name" class="text-danger"></span>
                        </div>
                        <div class="form-group" id="divFromLocation">
                            <label class="control-label">From: Country:Province:Location</label>
                            <input asp-for="Trip.Destination.StartLocation.LocationName" id="startLocationName" class="form-control" />
                            <span asp-validation-for="Trip.Destination.StartLocation.LocationName" class="text-danger"></span>
                        </div>
                        <div class="form-group" id="divToLocation">
                            <label class="control-label">To: Country:Province:Location</label>
                            <input asp-for="Trip.Destination.EndLocation.LocationName" id="endLocationName" class="form-control" />
                            <span asp-validation-for="Trip.Destination.EndLocation.LocationName" class="text-danger"></span>
                        </div>
                        <div class="form-group" id="divDistance">
                            <label asp-for="Trip.Destination.Distance" class="control-label"></label>
                            <input asp-for="Trip.Destination.Distance" id="distance" class="form-control" />
                            <span asp-validation-for="Trip.Destination.Distance" class="text-danger"></span>
                        </div>
                        <div class="form-check" id="divChkBox">
                            <input type="checkbox" class="form-check-input" id="revDestChkBox">
                            <label class="form-check-label" for="revDestChkBox">Reverse Dest.</label>
                        </div>
                    </div>
                    <div id="divDestinationTableSection">
                        @{await Html.RenderPartialAsync("_DestinationPartial");}
                    </div>
                    <br />
                    <div class="form-group">
                        <input type="button" value="Save" class="btn btn-default  " id="savebtnSection1" />
                    </div>
                </div>
            </div>

        </div>
    </div>
    <div class="card" id="cardSection2">
        <div class="card-header" id="headingTwo">
            <h5 class="mb-0">
                <button class="btn-primary" data-toggle="collapse" data-target="#collapseTwo" aria-expanded="false"
                        aria-controls="collapseTwo" style="background-color:darkred; border:outset; font-size:medium; border-color:white">
                    Section 2: Driver, Horse, Trailer
                </button>
            </h5>
        </div>

        <div id="collapseTwo" class="collapse" aria-labelledby="headingTwo" data-parent="#accordion">
            <h5><b>Drivers Details</b></h5>
            <div class="row" id="divDriverDetailsForm">
                <div class="col-md-4">
                    <div id="divDriverDetails">
                        <input type="hidden" asp-for="Trip.DriverID" id="driverID" />
                        <input type="hidden" asp-for="Trip.HorseID" id="horseID" />
                        <input type="hidden" asp-for="Trip.TrailerID" id="trailerID" />
                        <div class="input-group" id="divDriverBtns">
                            <span class="input-group-btn">
                                <input type="button" value="Find Driver" class="btn btn-default" id="findDriverBtn" />
                            </span>
                            <span class="input-group-btn">
                                <input type="button" value="Show Driver" class="btn btn-default" id="showDriverBtn" />
                            </span>
                        </div>
                        <br />
                        <div id="divDriverInputFieldsSection" class="well-sm" style="background-color:lightgray">
                            <div class="form-group" id="divDriverFirstName">
                                <label class="control-label">Driver First Name</label>
                                <input asp-for="Trip.Driver.FirstName" id="driverFirstName" class="form-control" />
                                <span asp-validation-for="Trip.Driver.FirstName" class="text-danger" id="ErrorMsgDriverName"></span>
                            </div>
                            <div class="form-group" id="divDriverSurname">
                                <label class="control-label">Driver Surname</label>
                                <input asp-for="Trip.Driver.Surname" id="driverSurname" class="form-control" />
                                <span asp-validation-for="Trip.Driver.Surname" class="text-danger" id="ErrorMsgDriverSurnname"></span>
                            </div>
                            <div class="form-group" id="divDriverCellPhone">
                                <label class="control-label">Driver CellNumber</label>
                                <input asp-for="Trip.Driver.CellNumber" id="driverCellPhone" class="form-control" />
                                <span asp-validation-for="Trip.Driver.CellNumber" class="text-danger"></span>
                            </div>
                        </div>
                        <div id="divDriverTableSection">
                            @{await Html.RenderPartialAsync("_DriverPartial");}
                        </div>
                    </div>
                </div>
            </div>
            <h5><b>Horse Details</b></h5>
            <div class="row" id="divHorseDetailsForm">
                <div class="col-md-4">
                    <div id="divHorseDetails">
                        <div class="input-group" id="divHorseBtns">
                            <span class="input-group-btn">
                                <input type="button" value="Find Horse" class="btn btn-default" id="findHorseBtn" />
                            </span>
                            <span class="input-group-btn">
                                <input type="button" value="Show Horse" class="btn btn-default" id="showHorseBtn" />
                            </span>
                        </div>
                        <br />
                        <div id="divHorseInputFieldsSection" class="well-sm" style="background-color:lightgray">
                            <div class="form-group" id="divHorseFirstName">
                                <label class="control-label">Fleet No</label>
                                <input asp-for="Trip.Horse.FleetNo" id="HorseFleetNo" class="form-control" />
                                <span asp-validation-for="Trip.Horse.FleetNo" class="text-danger"></span>
                            </div>
                            <div class="form-group" id="divHorseRegistrationNumber">
                                <label class="control-label">Registration Number</label>
                                <input asp-for="Trip.Horse.RegistrationNumber" id="HorseRegistrationNumber" class="form-control" />
                                <span asp-validation-for="Trip.Horse.RegistrationNumber" class="text-danger"></span>
                            </div>
                        </div>
                        <div id="divHorseTableSection">
                            @{await Html.RenderPartialAsync("_HorsePartial");}
                        </div>
                    </div>
                </div>
            </div>
            <h5><b>Trailer Details</b></h5>
            <div class="row" id="divTrailerDetailsForm">
                <div class="col-md-4">
                    <div id="divTrailerDetails">
                        <div class="input-group" id="divTrailerBtns">
                            <span class="input-group-btn">
                                <input type="button" value="Find Trailer" class="btn btn-default" id="findTrailerBtn" />
                            </span>
                            <span class="input-group-btn">
                                <input type="button" value="Show Trailer" class="btn btn-default" id="showTrailerBtn" />
                            </span>
                        </div>
                        <br />
                        <div id="divTrailerInputFieldsSection" class="well-sm" style="background-color:lightgray">
                            <div class="form-group" id="divTrailer">
                                <label class="control-label">Fleet No</label>
                                <input asp-for="Trip.Trailer.FleetNo" id="TrailerFleetNo" class="form-control" />
                                <span asp-validation-for="Trip.Trailer.FleetNo" class="text-danger"></span>
                            </div>
                            <div class="form-group" id="divTrailerRegistrationNumber">
                                <label class="control-label">Registration Number</label>
                                <input asp-for="Trip.Trailer.RegistrationNumber" id="TrailerRegistrationNumber" class="form-control" />
                                <span asp-validation-for="Trip.Trailer.RegistrationNumber" class="text-danger"></span>
                            </div>
                        </div>
                        <div id="divTrailerTableSection">
                            @{await Html.RenderPartialAsync("_TrailerPartial");}
                        </div>
                        <br />
                    </div>
                    <div class="form-group">
                        <input type="button" value="Save" class="btn btn-default  " id="savebtnSection2" />
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="card" id="cardSection3">
        <div class="card-header" id="headingThree">
            <h5 class="mb-0">
                <button id="fuelBtnSection" class="btn-primary" data-toggle="collapse" data-target="#collapseThree" aria-expanded="false"
                        aria-controls="collapseThree" style="background-color:darkred; border:outset; font-size:medium; border-color:white">
                    Section 3: Kilomtres, Diesel
                </button>
            </h5>
        </div>
        <div id="collapseThree" class="collapse" aria-labelledby="headingThree" data-parent="#accordion">
            @*<div class="card table-bordered well-sm">*@
            <div id="divFuelInputFieldsSection" class="well-sm" style="background-color:lightgray">
                <form id="FuelForm" method="post">
                    <div class="form-group" id="divPurchaseOrder">
                        <span style="color:red">*</span>
                        <label class="control-label">Purchase Order No</label>
                        <input asp-for="FuelItem.PurchaseOrderID" id="purchaseOrderID" class="form-control" />
                        <span asp-validation-for="FuelItem.PurchaseOrderID" class="text-danger"></span>
                    </div>
                    <div class="form-group" id="divLitres">
                            <span style="color:red">*</span>
                            <label class="control-label">Litres</label>
                            <input asp-for="FuelItem.Litres" id="litres" class="form-control" />
                            <span asp-validation-for="FuelItem.Litres" class="text-danger"></span>
                    </div>
                    <div class="form-group" id="divDieselRate">
                            <span style="color:red">*</span>
                            <label class="control-label">Fuel Rate</label>
                        <input asp-for="FuelItem.FuelRate" id="fuelRate" class="form-control" />
                        <span asp-validation-for="FuelItem.FuelRate" class="text-danger"></span>
                    </div>
                    <div class="form-group" id="divDieselCost">
                        <label class="control-label">Diesel Cost</label>
                        <input id="DieselTotalCost" class="form-control" />
                    </div>
                    <div class="form-group" id="divOdometre">
                        <span style="color:red">*</span>
                        <label class="control-label">Odometre</label>
                        <input asp-for="FuelItem.Odometre" id="odometre" class="form-control" />
                        <span asp-validation-for="FuelItem.Odometre" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <input type="button" value="Add" class="btn btn-default  " id="savebtnSection3" />
                    </div>
                </form >
            </div>
            <br />
            <div class="container" id="divFuelTable">
                <div style="width:100%; margin:0 auto;">
                    <table id="FuelTable" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0">
                        <thead>
                            <tr>
                                <th>FuelID</th>
                                <th>Purchase Order</th>
                                <th>Odometre</th>
                                <th>Litres</th>
                                <th>Diesel Rate</th>
                                <th>Diesel Cost</th>
                                <th>Date</th>
                                <th>Del.</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
            @*</div>*@
            <br />

        </div>
    </div>
    <div class="card" id="cardSection4">
        <div class="card-header" id="headingFour">
            <h5 class="mb-0">
                <button class="btn-primary" data-toggle="collapse" data-target="#collapseFour" aria-expanded="false"
                        aria-controls="collapseFour" style="background-color:darkred; border:outset; font-size:medium; border-color:white">
                    Section 4: Dates and Times
                </button>
            </h5>
        </div>
        <div id="collapseFour" class="collapse" aria-labelledby="headingFour" data-parent="#accordion">
            <div class="row" id="divTripDurationForm">
                <div class="col-md-4">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                    <div class="form-group" id="divExpectedCollectionDateTime">
                        <label asp-for="Trip.ExpectedCollectionDateTime" class="control-label">Expected Collection Date</label>
                        <div class='input-group date' id='datetimepicker2'>
                            <input type="text" class="form-control" id="expectedCollectionDate" />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                            <span asp-validation-for="Trip.ExpectedCollectionDateTime" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="form-group" id="divExpectedStartDateTime">
                        <label asp-for="Trip.ExpectedStartDateTime" class="control-label">Expected Start Date</label>
                        <div class='input-group date' id='datetimepicker3'>
                            <input type='text' class="form-control" id="expectedStartDate" />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                            @*<span asp-validation-for="Trip.ExpectedStartDateTime" class="text-danger"></span>*@
                        </div>
                    </div>
                    <div class="form-group" id="divExpectedCompletionDateTime">
                        <label asp-for="Trip.ExpectedCompletionDateTime" class="control-label">Expected Completion Date</label>
                        <div class='input-group date' id='datetimepicker4'>
                            <input type='text' class="form-control" id="expectedCompletionDate" />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                            <span asp-validation-for="Trip.ExpectedCompletionDateTime" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="form-group" id="divActualCollectionDateTime">
                        <label asp-for="Trip.ActualCollectionDateTime" class="control-label">Actual Collection Date</label>
                        <div class='input-group date' id='datetimepicker5'>
                            <input type='text' class="form-control" id="actualCollectionDate" />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                            <span asp-validation-for="Trip.ActualCollectionDateTime" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="form-group" id="divActualStartDateTime">
                        <label asp-for="Trip.ActualStartDateTime" class="control-label">Actual Start Date</label>
                        <div class='input-group date' id='datetimepicker6'>
                            <input type='text' class="form-control" id="actualStartDate" />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                            <span asp-validation-for="Trip.ActualStartDateTime" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="form-group" id="divActualCompletionDateTime">
                        <label asp-for="Trip.ActualCompletionDateTime" class="control-label">Actual Completion Date</label>
                        <div class='input-group date' id='datetimepicker7'>
                            <input type='text' class="form-control" id="actualCompletionDate" />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                            <span asp-validation-for="Trip.ActualCompletionDateTime" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="form-group" id="divDiffCollectionTimeHrs">
                        <label class="control-label">Diff: Collection Hrs</label>
                        <input asp-for="Trip.DiffCollectionTimeHrs" id="diffCollectionHrs" class="form-control" />
                        <span asp-validation-for="Trip.DiffCollectionTimeHrs" class="text-danger"></span>
                    </div>
                    <div class="form-group" id="divDiffStartTimeHrs">
                        <label class="control-label">Diff: Start Hrs</label>
                        <input asp-for="Trip.DiffStartTimeHrs" id="diffStartHrs" class="form-control" />
                        <span asp-validation-for="Trip.DiffStartTimeHrs" class="text-danger"></span>
                    </div>
                    <div class="form-group" id="divDiffCompletionTimeHrs">
                        <label class="control-label">Diff: Travel Hrs</label>
                        <input asp-for="Trip.DiffEndTimeHrs" id="diffEndHrs" class="form-control" />
                        <span asp-validation-for="Trip.DiffEndTimeHrs" class="text-danger"></span>
                    </div>
                    <div class="form-group" id="divDiffCollectionTimeHrs">
                        <label class="control-label">Diff: Total Hrs</label>
                        <input id="diffTotalHrs" class="form-control" />
                    </div>
                    <br />
                    <div class="form-group">
                        <input type="button" value="Save" class="btn btn-default  " id="savebtnSection4" />
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="card" id="cardSection5">
        <div class="card-header" id="headingFive">
            <h5 class="mb-0">
                <button class="btn-primary" data-toggle="collapse" data-target="#collapseFive" aria-expanded="false"
                        aria-controls="collapseFive" style="background-color:darkred; border:outset; font-size:medium; border-color:white">
                    Section 5: Invoicing Details
                </button>
            </h5>
        </div>
        <div id="collapseFive" class="collapse" aria-labelledby="headingFive" data-parent="#accordion">
            <div id="divInvoiceSection" class="well-sm" style="background-color:lightgray">
                <div class="form-group" id="divInvoiceNo">
                    <label class="control-label">Invoice Number</label>
                    <input asp-for="Trip.InvoiceNo" id="invoiceNo" class="form-control" />
                    <span asp-validation-for="Trip.InvoiceNo" class="text-danger"></span>
                </div>
                <div class="form-group" id="divInvoiceDate">
                    <label class="control-label">Invoice Date</label>
                    <div class='input-group date' id='datetimepicker8'>
                        <input value=@Model.Trip.InvoiceDate type='text' class="form-control" id="invoiceDate" />
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                        <span asp-validation-for="Trip.InvoiceDate" class="text-danger"></span>
                    </div>

                </div>
                <div class="form-group" id="divCustomerReferenceNo">
                    <label class="control-label">Customer Reference No</label>
                    <input asp-for="Trip.CustomerReferenceNo" id="customerReferenceNo" class="form-control" />
                </div>
                <div class="form-group" id="divInvoiceKms">
                    <label class="control-label">Invoice Kms</label>
                    <input asp-for="Trip.InvoicedKms" id="invoicedKms" class="form-control" />
                </div>
                <div class="form-group" id="divInvoiceRate">
                    <label class="control-label">Invoice Rate</label>
                    <input asp-for="Trip.InvoiceRate" id="invoiceRate" class="form-control" />
                </div>
                <div class="form-group" id="divInvoiceAmount">
                    <label class="control-label">Invoice Amount</label>
                    <input asp-for="Trip.InvoiceAmount" id="invoiceAmount" class="form-control" />
                </div>
                <div class="form-group">
                    <input type="button" value="Add" class="btn btn-default  " id="savebtnSection5" />
                </div>
            </div>
        </div>
    </div>
    <div class="card" id="cardSection6">
        <div class="card-header" id="headingSix">
            <h5 class="mb-0">
                <button id="TripFileBtnSection" class="btn-primary" data-toggle="collapse" data-target="#collapseSix" aria-expanded="false"
                        aria-controls="collapseSix" style="background-color:darkred; border:outset; font-size:medium; border-color:white">
                    Section 6: Upload Files
                </button>
            </h5>
        </div>
        <div id="collapseSix" class="collapse" aria-labelledby="headingSix" data-parent="#accordion">
            <div id="divUploadSection" class="well-sm" style="background-color:lightgray">
                <form method="post" enctype="multipart/form-data">
                    <div class="form-group">
                        <input type="file" id="fUpload" name="files" multiple class="form-control" />
                    </div>
                    <div class="form-group">
                        <input type="button" class="btn btn-default" id="btnUpload" value="Upload" />
                    </div>
                </form>
                <br />
                <div class="container" id="divTripFileTable">
                    <div style="width:100%; margin:0 auto;">
                        <table id="TripFileTable" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0">
                            <thead>
                                <tr>
                                    <th>TripFileID</th>
                                    <th>File Name</th>
                                    <th>File Date</th>
                                    <th>Del.</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
                @*</div>*@
                <br />
            </div>
        </div>
    </div>
</div>


@section Scripts {
    @await Html.PartialAsync("_ModalPartial")
    @await Html.PartialAsync("_ModalConfirmPartial")
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script type="text/javascript">
        var TripToSave = {};

        //section Update Destination Fields
        function updateDestinationInputFields(data) {

        var selectedDestination = {};
        selectedDestination = JSON.parse(data);
        $("#destinationID").val(selectedDestination.destinationID);
            $("#customerName").val(decodeURIComponent(selectedDestination.customerName));
        $("#startLocationName").val(decodeURIComponent(selectedDestination.startLocationName));
        $("#endLocationName").val(decodeURIComponent(selectedDestination.endLocationName));
        $("#distance").val(decodeURIComponent(selectedDestination.distance));
        $("#customerName").prop("disabled", true);
        $("#startLocationName").prop("disabled", true);
        $("#endLocationName").prop("disabled", true);
        $("#distance").prop("disabled", true);
        $("#divDestinationInputFieldsSection").show();

        $("#divDestinationTableSection").hide();
        $('#showDestinationBtn').val("Hide Dest.");
    }

        function DeleteFuelItem(FuelID) {
            console.log("Before Ajax Call:" + "FuelID is: " + FuelID);
            var obj = {};
            obj.fuelID = FuelID;
                    $.ajax({
                        type: "DELETE",
                        url: '/Trips/Trip?handler=DeleteFuelItem',
                        headers:
                            {
                                "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                            },
                        contentType: "application/json",
                        dataType: "json",
                        data: JSON.stringify(obj),
                        success: function (msg) {
                                oTable = $('#FuelTable').DataTable();
                                oTable.draw();
                                $("#modalHeader").text("Trip: Fuel Processing Status");
                                $("#modalMessage").text("Fuel Item deleted from Table");
                                $("#myModal").modal("show");
                            },
                            error: function () {
                                $("#modalHeader").text("Trip: Fuel Processing Status");
                                $("#modalMessage").text("Fuel Item not deleted from Table");
                                $("#myModal").modal("show");
                            }
                        });//ajax
        }
    function DeleteTripFileItem(TripFileID,TripFileName) {
        console.log("Before Ajax Call:" + "TripFileID is: " + TripFileID);
            var obj = {};
        obj.tripFileID = TripFileID;
        obj.tripFileName = TripFileName;
        console.log("Trip File ID to delete is: " + obj.tripFileID);
                    $.ajax({
                        type: "DELETE",
                        url: '/Trips/Trip?handler=DeleteTripFileItem',
                        headers:
                            {
                                "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                            },
                        contentType: "application/json",
                        dataType: "json",
                        data: JSON.stringify(obj),
                        success: function (msg) {
                                oTable = $('#TripFileTable').DataTable();
                                oTable.draw();
                                $("#modalHeader").text("Trip: File Processing Status");
                                $("#modalMessage").text("File deleted from Table");
                                $("#myModal").modal("show");
                            },
                            error: function () {
                                $("#modalHeader").text("Trip: File Processing Status");
                                $("#modalMessage").text("Trip File not deleted from Table");
                                $("#myModal").modal("show");
                            }
                        });//ajax
        }


        function addFuelItemToTable() {
            //First check if a TripId exists
            if ($('#tripId').val().length == 0) {
                $("#modalHeader").text("Trip Section 4 Processing Status");
                $("#modalMessage").text("Please ensure you have created a Trip Before you save Fuel Data");
                $("#myModal").modal("show");
                return;
            }
            //Create and Populate The Fuel Item Object

            var fuelItem = {};
            fuelItem.tripID = $('#tripId').val();
            console.log($('#purchaseOrderID').val());
            fuelItem.purchaseOrderID = cleanSpaces($('#purchaseOrderID').val());
            console.log(fuelItem.purchaseOrderID);
            fuelItem.fuelRate = $('#fuelRate').val();
            fuelItem.litres = $('#litres').val();
            fuelItem.odometre = $('#odometre').val();
            ajaxFuelItemInsert(fuelItem);


        }


        function GetDestinationData() {

            $("#DestinationTable").on('xhr.dt', function (e, settings, json, xhr) {
            }).DataTable({
                "fixedHeader": {
                    "header": true,
                    "footer": true
                },
                "responsive": true,
                "processing": true, // for show progress bar
                "serverSide": true, // for process server side
                "filter": true, // this is for disable filter (search box)
                "orderMulti": false, // for disable multiple column at once
                "ajax": {

                    "url": "/Destinations/Destination?handler=Paging",
                    "headers":
                        {
                            "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                        },
                    "type": "POST",
                    "datatype": "json"
                },
                "columnDefs":
                    [{
                        /*Destination ID is not visible and is not searchable*/
                        "targets": [0],
                        "visible": false,
                        "searchable": false
                    },
                    {
                        /*CsutomerID is not visible and is not searchable*/
                        "targets": [1],
                        "visible": false,
                        "searchable": false
                    },
                    {
                        /*StartLocationID is not visible and is not searchable*/
                        "targets": [2],
                        "visible": false,
                        "searchable": false
                    },
                    {
                        /*EndLocationID is not visible and is not searchable*/
                        "targets": [3],
                        "visible": false,
                        "searchable": false
                    },
                    {
                        /*Select button  is  visible and is not searchable*/
                        "targets": [8],
                        "visible": true,
                        "searchable": false,
                        "orderable": false
                    }
                    ],
                "columns": [
                    { "data": "destinationID", "name": "destinationID", "autoWidth": true },
                    { "data": "customerID", "name": "customerID", "autoWidth": true },
                    { "data": "startLocationID", "name": "startLocationID", "autoWidth": true },
                    { "data": "endLocationID", "name": "endLocationID", "autoWidth": true },
                    { "data": "customerName", "name": "customerName", "autoWidth": true },
                    { "data": "startLocationName", "name": "startLocationName", "autoWidth": true },
                    { "data": "endLocationName", "name": "endLocationName", "autoWidth": true },
                    { "data": "distance", "name": "distance", "autoWidth": true },
                    //Select Data
                    {
                        "render": function (data, type, full, meta) {
                            var selectedDestination = {};
                            selectedDestination.destinationID = full.destinationID;
                            selectedDestination.customerID = full.customerID;
                            selectedDestination.customerName = encodeURIComponent(full.customerName);
                            selectedDestination.startLocationID = full.startLocationID;
                            selectedDestination.endLocationID = full.endLocationID;
                            selectedDestination.startLocationName = encodeURIComponent(full.startLocationName);
                            selectedDestination.endLocationName = encodeURIComponent(full.endLocationName);
                            selectedDestination.distance = encodeURIComponent(full.distance);
                            return "<p data-placement='top' data-toggle='tooltip' title='Select'><button id='btnDest' class='btn btn-primary btn-xs' data-title='Select' data-toggle='modal' data-target='#edit' onclick=updateDestinationInputFields('" + JSON.stringify(selectedDestination) + "')><span class='glyphicon glyphicon-pencil'></span></button></p>";

                        }
                    },
                ]

                });

        }//GetDestinationData

        function ajaxTripInsert(obj) {
            console.log("Trip Section 1: in Insert Ajax Call: " + JSON.stringify(obj));
            $.ajax({
                type: "POST",
                url: "/Trips/Trip?handler=InsertTrip",
                    headers:
                        {
                            "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                        },
                    contentType: "application/json",
                    dataType: "json",
                    data: JSON.stringify(obj),
                    success: function (data) {
                        console.log(data);
                        $("#tripId").val(data.tripID);
                        console.log("Hidden Trip Id:" + $("#tripId").val());
                        $("#modalHeader").text("Trip Processing Status");
                        $("#modalMessage").text(data.tripID + " was inserted.");
                        $("#myModal").modal("show");
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        $("#modalHeader").text("Trip Processing Status");
                        $("#modalMessage").text("Trip Data Not Updated.");
                        $("#myModal").modal("show");
                    }
                });//ajax insert
        }
        function ajaxFuelItemInsert(obj) {
            console.log("Fuel Item : in Insert Ajax Call: " + JSON.stringify(obj));
            $.ajax({
                type: "POST",
                url: "/Trips/Trip?handler=InsertFuelItem",
                    headers:
                        {
                            "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                        },
                    contentType: "application/json",
                    dataType: "json",
                    data: JSON.stringify(obj),
                success: function (data) {
                    $("#modalHeader").text("Fuel Item Processing Status");
                    console.log(data);
                    if (data.fuelID == null) {
                        $("#modalMessage").text(data);
                        $("#myModal").modal("show");
                        return;
                    }
                    else {
                        var msg = "Fuel Item successfully inserted into database. The fuel ID is: " + data.fuelID
                        console.log(msg);
                        $("#modalMessage").text(msg);
                        $("#myModal").modal("show");
                        $('#purchaseOrderID').val("");
                        $('#fuelRate').val("");
                        $('#litres').val("");
                        $('#odometre').val("");
                        $('#DieselTotalCost').val("");
                        if (!$.fn.DataTable.isDataTable('#FuelTable')) {
                            GetFuelData();
                            
                        }
                        else {
                            var oTable = $('#FuelTable').DataTable();
                            oTable.draw()
                        }
                    }

                   },
                    error: function (jqXHR, textStatus, errorThrown) {
                        $("#modalHeader").text("Fuel Item Processing Status");
                        $("#modalMessage").text("Fuel Item Not Updated.");
                        $("#myModal").modal("show");
                    }
                });//ajax insert Fuel
        }




        function ajaxTripUpdate(obj) {
            console.log("ajaxTripUpdate Function runs: " + JSON.stringify(obj));
            $.ajax({
                type: "PUT",
                url: "/Trips/Trip?handler=UpdateTrip",

                headers:
                {
                    "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                },
                contentType: "application/json",
                dataType: "json",
                data: JSON.stringify(obj),
                success: function (data) {
                    console.log(data);
                    console.log("Trip Data successfully returned from DataBase");
                    $("#modalHeader").text("Trip Section 1 Processing Status");
                    $("#modalMessage").text($("#tripId").val() + " was updated.");
                    $("#myModal").modal("show");
                    $("#expectedCompletionDate").val(data.expectedCompletionDateTime);
                    $("#diffCollectionHrs").val(parseFloat(Math.round(data.diffCollectionTimeHrs * 100) / 100).toFixed(2));
                    $("#diffStartHrs").val(parseFloat(Math.round(data.diffStartTimeHrs * 100) / 100).toFixed(2));
                    $("#diffEndHrs").val(parseFloat(Math.round(data.diffEndTimeHrs * 100) / 100).toFixed(2));
                    $("#diffTotalHrs").val(parseFloat(Math.round((data.diffEndTimeHrs + data.diffEndTimeHrs + data.diffStartTimeHrs) * 100) / 100).toFixed(2));
                    },
                    error: function (jqXHR, textStatus, errorThrown) {

                        $("#modalHeader").text("Trip Processing Status");
                        $("#modalMessage").text("Trip was not updated.");
                        $("#myModal").modal("show");
                    }
                });//ajax Update Section 1
        }




        function updateDriverInputFields(data) {
            var selectedDriver = {};
            selectedDriver = JSON.parse(data);
            $("#driverID").val(selectedDriver.driverID);
            $("#driverFirstName").val(decodeURIComponent(selectedDriver.firstName));
            $("#driverSurname").val(decodeURIComponent(selectedDriver.surname));
            $("#driverCellPhone").val(decodeURIComponent(selectedDriver.cellNumber));


            $("#divDriverInputFieldsSection").show();

            $("#divDriverTableSection").hide();
            $('#showDriverBtn').val("Hide Driver");
        }


        function GetDriverData() {

            $("#DriverTable").on('xhr.dt', function (e, settings, json, xhr) {
            }).DataTable({
                "fixedHeader": {
                    "header": true,
                    "footer": true
                },
                "responsive": true,
                "processing": true, // for show progress bar
                "serverSide": true, // for process server side
                "filter": true, // this is for disable filter (search box)
                "orderMulti": false, // for disable multiple column at once
                "ajax": {

                    "url": "/Drivers/Index?handler=Paging",
                    "headers":
                        {
                            "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                        },
                    "type": "POST",
                    "datatype": "json"
                },
                "columnDefs":
                    [{
                        /*Driver ID is not visible and is not searchable*/
                        "targets": [0],
                        "visible": false,
                        "searchable": false
                    },
                    {
                        /*First Name is  visible and searchable*/
                        "targets": [1],
                        "visible": true,
                        "searchable": true
                    },
                    {
                        /*Surname is visible and is searchable*/
                        "targets": [2],
                        "visible": true,
                        "searchable": true
                    },
                    {
                        /*Second Name is not visible and is not searchable*/
                        "targets": [3],
                        "visible": false,
                        "searchable": false
                    },
                    {
                        /*Cell Number is  visible and is  searchable*/
                        "targets": [4],
                        "visible": true,
                        "searchable": true
                    },
                    {
                        /*PDP Expiry Date is not visible and is not searchable*/
                        "targets": [5],
                        "visible": false,
                        "searchable": false
                    },
                    {
                        /*Medical Expiry Date is not visible and is not searchable*/
                        "targets": [6],
                        "visible": false,
                        "searchable": false
                    },
                    {
                        /*Select button  is  visible and is not searchable*/
                        "targets": [7],
                        "visible": true,
                        "searchable": false,
                        "orderable": false
                    }
                ],
                "columns": [
                    { "data": "driverID", "name": "driverID", "autoWidth": true },
                    { "data": "firstName", "name": "firstName", "autoWidth": true },
                    { "data": "surname", "name": "surname", "autoWidth": true },
                    { "data": "secondName", "name": "secondName", "autoWidth": true },
                    { "data": "cellNumber", "name": "cellNumber", "autoWidth": true },
                    { "data": "pdpExpiryDate", "name": "pdpExpiryDate", "autoWidth": true },
                    { "data": "medicalExpiryDate", "name": "medicalExpiryDate", "autoWidth": true },
                    {
                        "render": function (data, type, full, meta) {
                            var selectedDriver = {};
                            selectedDriver.driverID = full.driverID;
                            selectedDriver.firstName = encodeURIComponent(full.firstName);
                            selectedDriver.surname = encodeURIComponent(full.surname);
                            selectedDriver.secondName = encodeURIComponent(full.secondName);
                            selectedDriver.cellNumber = encodeURIComponent(full.cellNumber);
                            selectedDriver.pdpExpiryDate = encodeURIComponent(full.pdpExpiryDate);
                            selectedDriver.medicalExpiryDate = encodeURIComponent(full.medicalExpiryDate);
                            selectedDriver.passportNo = encodeURIComponent(full.passportNo);
                            selectedDriver.iDNumber = encodeURIComponent(full.iDNumber);
                            selectedDriver.nextOfKin = encodeURIComponent(full.nextOfKin);
                            selectedDriver.nextOfKinDate = encodeURIComponent(full.nextOfKinDate);
                            return "<p data-placement='top' data-toggle='tooltip' title='Select'><button id='btnDriver' class='btn btn-primary btn-xs' data-title='Select' data-toggle='modal' data-target='#edit' onclick=updateDriverInputFields('" + JSON.stringify(selectedDriver) + "')><span class='glyphicon glyphicon-pencil'></span></button></p>";
                        }
                    },
                ]
                });

        }//GetDriverData

        function updateHorseInputFields(data) {
            var selectedHorse = {};
            selectedHorse = JSON.parse(data);
            $("#horseID").val(selectedHorse.vehicleID);
            $("#HorseFleetNo").val(decodeURIComponent(selectedHorse.fleetNo));
            $("#HorseRegistrationNumber").val(decodeURIComponent(selectedHorse.registrationNumber));
            $("#divHorseInputFieldsSection").show();
            $("#divHorseTableSection").hide();
            $('#showHorseBtn').val("Hide Horse");
        }


        function GetHorseData() {

            $("#HorseTable").on('xhr.dt', function (e, settings, json, xhr) {
            }).DataTable({
                "fixedHeader": {
                    "header": true,
                    "footer": true
                },
                "responsive": true,
                "processing": true, // for show progress bar
                "serverSide": true, // for process server side
                "filter": true, // this is for disable filter (search box)
                "orderMulti": false, // for disable multiple column at once
                "ajax": {

                    "url": "/Horses/Index?handler=Paging",
                    "headers":
                        {
                            "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                        },
                    "type": "POST",
                    "datatype": "json"
                },
                "columnDefs":
                    [{
                        /*Horse ID is not visible and is not searchable*/
                        "targets": [0],
                        "visible": false,
                        "searchable": false
                    },
                    {
                        /*Fleet No is  visible and searchable*/
                        "targets": [1],
                        "visible": true,
                        "searchable": true
                    },
                    {
                        /*RegistrationNumber is visible and is searchable*/
                        "targets": [2],
                        "visible": true,
                        "searchable": true
                    },
                    {
                        /*Select button  is  visible and is not searchable*/
                        "targets": [3],
                        "visible": true,
                        "searchable": false,
                        "orderable": false
                    }
                ],
                "columns": [
                    { "data": "vehicleID", "name": "vehicleID", "autoWidth": true },
                    { "data": "fleetNo", "name": "fleetNo", "autoWidth": true },
                    { "data": "registrationNumber", "name": "registrationNumber", "autoWidth": true },
                    //Select Data
                    {
                        "render": function (data, type, full, meta) {
                            var selectedHorse = {};
                            selectedHorse.vehicleID = full.vehicleID;
                            selectedHorse.fleetNo = encodeURIComponent(full.fleetNo);
                            selectedHorse.registrationNumber = encodeURIComponent(full.registrationNumber);
                            return "<p data-placement='top' data-toggle='tooltip' title='Select'><button id='btnHorse' class='btn btn-primary btn-xs' data-title='Select' data-toggle='modal' data-target='#edit' onclick=updateHorseInputFields('" + JSON.stringify(selectedHorse) + "')><span class='glyphicon glyphicon-pencil'></span></button></p>";
                        }
                    },
                ]
                });

        }//GetHorseData

        function updateTrailerInputFields(data) {
            var selectedTrailer = {};
            selectedTrailer = JSON.parse(data);
            $("#trailerID").val(selectedTrailer.vehicleID);
            $("#TrailerFleetNo").val(decodeURIComponent(selectedTrailer.fleetNo));
            $("#TrailerRegistrationNumber").val(decodeURIComponent(selectedTrailer.registrationNumber));
            $("#divTrailerInputFieldsSection").show();
            $("#divTrailerTableSection").hide();
            $('#showTrailerBtn').val("Hide Trailer");
        }


        function GetTrailerData() {

            $("#TrailerTable").on('xhr.dt', function (e, settings, json, xhr) {
            }).DataTable({
                "fixedHeader": {
                    "header": true,
                    "footer": true
                },
                "responsive": true,
                "processing": true, // for show progress bar
                "serverSide": true, // for process server side
                "filter": true, // this is for disable filter (search box)
                "orderMulti": false, // for disable multiple column at once
                "ajax": {

                    "url": "/Trailers/Index?handler=Paging",
                    "headers":
                        {
                            "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                        },
                    "type": "POST",
                    "datatype": "json"
                },
                "columnDefs":
                    [{
                        /*Trailer ID is not visible and is not searchable*/
                        "targets": [0],
                        "visible": false,
                        "searchable": false
                    },
                    {
                        /*Fleet No is  visible and searchable*/
                        "targets": [1],
                        "visible": true,
                        "searchable": true
                    },
                    {
                        /*RegistrationNumber is visible and is searchable*/
                        "targets": [2],
                        "visible": true,
                        "searchable": true
                    },
                    {
                        /*Select button  is  visible and is not searchable*/
                        "targets": [3],
                        "visible": true,
                        "searchable": false,
                        "orderable": false
                    }
                ],
                "columns": [
                    { "data": "vehicleID", "name": "vehicleID", "autoWidth": true },
                    { "data": "fleetNo", "name": "fleetNo", "autoWidth": true },
                    { "data": "registrationNumber", "name": "registrationNumber", "autoWidth": true },
                    //Select Data
                    {
                        "render": function (data, type, full, meta) {
                            var selectedTrailer = {};
                            selectedTrailer.vehicleID = full.vehicleID;
                            selectedTrailer.fleetNo = encodeURIComponent(full.fleetNo);
                            selectedTrailer.registrationNumber = encodeURIComponent(full.registrationNumber);
                            return "<p data-placement='top' data-toggle='tooltip' title='Select'><button id='btnTrailer' class='btn btn-primary btn-xs' data-title='Select' data-toggle='modal' data-target='#edit' onclick=updateTrailerInputFields('" + JSON.stringify(selectedTrailer) + "')><span class='glyphicon glyphicon-pencil'></span></button></p>";
                        }
                    },
                ]
                });

        }//GetTrailerData
        var CountFuelData = 0;
        function GetFuelData() {

            $("#FuelTable").on('xhr.dt', function (e, settings, json, xhr) {
            }).DataTable({
                "fixedHeader": {
                    "header": true,
                    "footer": true
                },
                "order": [[6, "desc"]],
                "responsive": true,
                "processing": true, // for show progress bar
                "serverSide": true, // for process server side
                "filter": true, // this is for disable filter (search box)
                "orderMulti": false, // for disable multiple column at once
                "ajax": {

                    "url": "/Trips/Trip?handler=FuelPaging",
                    "headers":
                        {
                            "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                        },
                    "type": "POST",
                    "datatype": "json",
                    "data": function (d) {
                        d.search.value = $('#tripId').val();
                    }
                },
                "columnDefs":
                    [{
                        /*Fuel ID is not visible and is not searchable*/
                        "targets": [0],
                        "visible": false,
                        "searchable": false
                    },
                    {
                        /*Puchase Order No is  visible and searchable*/
                        "targets": [1],
                        "visible": true,
                        "searchable": true
                    },
                    {
                        /*Odometre is visible and is searchable*/
                        "targets": [2],
                        "visible": true,
                        "searchable": true
                    },
                    {
                        /*Litres is visible and is searchable*/
                        "targets": [3],
                        "visible": true,
                        "searchable": true
                    },
                    {
                        /*Rate is visible and is searchable*/
                        "targets": [4],
                        "visible": true,
                        "searchable": true
                    },
                    {
                        /*Diesel Total Cost is visible and is searchable*/
                        "targets": [5],
                        "visible": true,
                        "searchable": true,
                        "orderable": false
                        },
                    {
                        /*Date is visible and is searchable*/
                        "targets": [6],
                        "visible": true,
                        "searchable": true,
                    },
                    {
                        /*Delete button  is  visible and is not searchable*/
                        "targets": [7],
                        "visible": true,
                        "searchable": false,
                        "orderable": false
                    }
                ],
                "columns": [
                    { "data": "fuelID", "name": "fuelID", "autoWidth": true },
                    { "data": "purchaseOrderID", "name": "purchaseOrderID", "autoWidth": true },
                    { "data": "odometre", "name": "odometre", "autoWidth": true },
                    { "data": "litres", "name": "litres", "autoWidth": true },
                    { "data": "fuelRate", "name": "fuelRate", "autoWidth": true },
                    {
                        "data": null, render: function (data, type, row) {
                            return row.litres * row.fuelRate;
                        }
                    },
                    {
                        data: "createdUtc",
                        render: function (data, type, row) {
                            return moment(data).format("DD-MM-YYYY HH:mm");
                        }
                    },

                   // { "data": "createdUtc", "name": "createdUtc", "autoWidth": true },
                    //Delete FuelItem
                    {
                        "data": null, render: function (data, type, row) {
                            return '<p data-placement="top" data-toggle="tooltip" title="Delete"><button class="btn btn-danger btn-xs" data-title="Delete" data-toggle="modal" data-target="#delete" onclick=DeleteFuelItem("' + row.fuelID + '")><span class="glyphicon glyphicon-trash"></span></button></p>';
                        }
                    }
                ]
                });

        }//GetFuelData

        function GetTripFileData() {

            $("#TripFileTable").on('xhr.dt', function (e, settings, json, xhr) {
            }).DataTable({
                "fixedHeader": {
                    "header": true,
                    "footer": true
                },
                "responsive": true,
                "processing": true, // for show progress bar
                "serverSide": true, // for process server side
                "filter": true, // this is for disable filter (search box)
                "orderMulti": false, // for disable multiple column at once
                "ajax": {

                    "url": "/Trips/Trip?handler=TripFilePaging",
                    "headers":
                    {
                        "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                    },
                    "type": "POST",
                    "datatype": "json",
                    "data": function (d) {
                        d.search.value = $('#tripId').val();
                    }
                },
                "columnDefs":
                    [{
                        /*Trip File ID is not visible and is not searchable*/
                        "targets": [0],
                        "visible": false,
                        "searchable": false
                    },
                    {
                        /*FileName is  visible and searchable*/
                        "targets": [1],
                        "visible": true,
                        "searchable": true
                    },
                    {
                        /*File Date is visible and is searchable*/
                        "targets": [2],
                        "visible": true,
                        "searchable": true
                    },
                    {
                        /*Delete button  is  visible and is not searchable*/
                        "targets": [3],
                        "visible": true,
                        "searchable": false,
                        "orderable": false
                    }
                ],
                "columns": [
                    { "data": "tripFileID", "name": "tripFileID", "autoWidth": true },
                    {
                        "data": null, render: function (data, type, row) {
                            //return '<a href="UploadFiles/Download/?filename="' + row.tripFileName + '""">"' + row.TripFileName + '"</a>'
                            return '<a href="/UploadFiles/Download?filename=' + row.tripFileName + '">' + row.tripFileName + '</a>';
                        }
                    },
                    { "data": "fileDateTime", "name": "fileDateTime", "autoWidth": true },
                    //Delete t
                    {
                        "data": null, render: function (data, type, row) {
                            return '<p data-placement="top" data-toggle="tooltip" title="Delete"><button class="btn btn-danger btn-xs" data-title="Delete" data-toggle="modal" data-target="#delete" onclick=DeleteTripFileItem("' + row.tripFileID + '","'+ row.tripFileName +'")><span class="glyphicon glyphicon-trash"></span></button></p>';
                        }
                    }
                ]
                });

        }//Get TripFileData
        
       


        $(document).ready(function () {

            //hide the destination table and  capture fields when the form starts up
            $("#divDestinationTableSection").hide();
            $("#divDestinationInputFieldsSection").hide();
            $("#customerName").prop("disabled", true);
            $("#startLocationName").prop("disabled", true);
            $("#endLocationName").prop("disabled", true);
            $("#distance").prop("disabled", true);
            //hide the driver table and the driver capture fields when the form starts up
            $("#divDriverTableSection").hide();
            $("#divDriverInputFieldsSection").hide();
            $("#driverFirstName").prop("disabled", true);
            $("#driverSurname").prop("disabled", true);
            $("#driverCellPhone").prop("disabled", true);
            //hide the horse table and the horse capture fields when the form starts up
            $("#divHorseTableSection").hide();
            $("#divHorseInputFieldsSection").hide();
            $("#HorseFleetNo").prop("disabled", true);
            $("#HorseRegistrationNumber").prop("disabled", true);
            //hide the Trailer table and the Trailer capture fields when the form starts up
            $("#divTrailerTableSection").hide();
            $("#divTrailerInputFieldsSection").hide();
            $("#TrailerFleetNo").prop("disabled", true);
            $("#TrailerRegistrationNumber").prop("disabled", true);

            //Disable Diesel Total Cost
            $("#DieselTotalCost").prop("disabled", true);

            //Disable calculated dates fields in the date section

            

            $("#expectedCompletionDate").prop("disabled", true);
            $("#diffCollectionHrs").prop("disabled", true);
            $("#diffStartHrs").prop("disabled", true);
            $("#diffEndHrs").prop("disabled", true);
            $("#diffTotalHrs").prop("disabled", true);


            //Click Button Functions
            $('#fuelRate').change(function () {
                var fuelRateCheck = $("#fuelRate").hasClass("valid");
                var litresCheck = $("#litres").hasClass("valid");
                if (fuelRateCheck && litresCheck) {
                    ($("#DieselTotalCost")).val($('#fuelRate').val() * $('#litres').val()); // get the current value of the input field.
                }
                else {
                    ($("#DieselTotalCost")).val(0);
                }
                });
            $('#litres').change(function () {
                var fuelRateCheck = $("#fuelRate").hasClass("valid");
                var litresCheck = $("#litres").hasClass("valid");

                if (fuelRateCheck && litresCheck) {
                    ($("#DieselTotalCost")).val($('#fuelRate').val() * $('#litres').val()); // get the current value of the input field.
                }
                else {
                    ($("#DieselTotalCost")).val(0);
                }
            });



            //Find Destination
            $('#findDestinationBtn').click(function () {
                $("#divDestinationTableSection").show();
                $('#divDestinationInputFieldsSection').hide();
                if (!$.fn.DataTable.isDataTable('#DestinationTable')) {
                    GetDestinationData();
                }
            });
            //Find Driver
            $('#findDriverBtn').click(function () {
                $("#divDriverTableSection").show();
                $('#divDriverInputFieldsSection').hide();
                if (!$.fn.DataTable.isDataTable('#DriverTable')) {
                    GetDriverData();
                }
            });
            //Find Horse
            $('#findHorseBtn').click(function () {
                $("#divHorseTableSection").show();
                $('#divHorseInputFieldsSection').hide();
                if (!$.fn.DataTable.isDataTable('#HorseTable')) {
                    GetHorseData();
                }
            });
            //Find Trailer
            $('#findTrailerBtn').click(function () {
                $("#divTrailerTableSection").show();
                $('#divTrailerInputFieldsSection').hide();
                if (!$.fn.DataTable.isDataTable('#TrailerTable')) {
                    GetTrailerData();
                }
            });
            //Reverse Destination Start and End Boxes
            $('#revDestChkBox').click(function () {
                var temp = $("#startLocationName").val();
                $("#startLocationName").val($("#endLocationName").val());
                $("#endLocationName").val(temp);
            });
            //Show and Hide Destination
            $('#showDestinationBtn').click(function () {
                if ($('#showDestinationBtn').val() == "Show Dest.") {
                    $("#divDestinationTableSection").hide();
                    $('#divDestinationInputFieldsSection').show();
                    $('#showDestinationBtn').val("Hide Dest.");
                }
                else {
                    $("#divDestinationTableSection").hide();
                    $('#divDestinationInputFieldsSection').hide();
                    $('#showDestinationBtn').val("Show Dest.");
                }
            });

            //Show and Hide Driver
            $('#showDriverBtn').click(function () {
                if ($('#showDriverBtn').val() == "Show Driver") {
                    $("#divDriverTableSection").hide();
                    $('#divDriverInputFieldsSection').show();
                    $('#showDriverBtn').val("Hide Driver");
                }
                else {
                    $("#divDriverTableSection").hide();
                    $('#divDriverInputFieldsSection').hide();
                    $('#showDriverBtn').val("Show Driver");
                }
            });

            //Show and Hide Horse
            $('#showHorseBtn').click(function () {
                if ($('#showHorseBtn').val() == "Show Horse") {
                    $("#divHorseTableSection").hide();
                    $('#divHorseInputFieldsSection').show();
                    $('#showHorseBtn').val("Hide Horse");
                }
                else {
                    $("#divHorseTableSection").hide();
                    $('#divHorseInputFieldsSection').hide();
                    $('#showHorseBtn').val("Show Horse");
                }
            });

            //Show and Hide Trailer
            $('#showTrailerBtn').click(function () {
                if ($('#showTrailerBtn').val() == "Show Trailer") {
                    $("#divTrailerTableSection").hide();
                    $('#divTrailerInputFieldsSection').show();
                    $('#showTrailerBtn').val("Hide Trailer");
                }
                else {
                    $("#divTrailerTableSection").hide();
                    $('#divTrailerInputFieldsSection').hide();
                    $('#showTrailerBtn').val("Show Trailer");
                }
            });

            

            //TripHeader Details (Trip Code and Destination Details)
            $('#savebtnSection1').click(function () {

                if ($('#tripCode').val().length == 0) {
                    $("#modalHeader").text("Trip Section 2 Processing Status");
                    $("#modalMessage").text("Trip Data Not Updated: Please enter a valid Trip Code");
                    $("#myModal").modal("show");
                    return;
                }

                if ($('#destinationID').val().length == 0) {
                    $("#modalHeader").text("Trip Section 2 Processing Status");
                    $("#modalMessage").text("Trip Data Not Updated: Please select a Destination.");
                    $("#myModal").modal("show");
                    return;
                }

                TripToSave.tripCode = cleanSpaces($('#tripCode').val());
                TripToSave.destinationID = $('#destinationID').val();
                TripToSave.reverseDestinationID = $('#revDestChkBox:checked').val() ? true : false;

                //Update Section 2 Details
                TripToSave.driverID = $("#driverID").val();
                TripToSave.horseID = $("#horseID").val();
                TripToSave.trailerID = $("#trailerID").val();

                TripToSave.expectedCollectionDateTime = $('#expectedCollectionDate').val();
                TripToSave.expectedStartDateTime = $('#expectedStartDate').val();
                TripToSave.actualCollectionDateTime = $('#actualCollectionDate').val();
                TripToSave.actualStartDateTime = $('#actualStartDate').val();
                TripToSave.actualCompletionDateTime = $('#actualCompletionDate').val();

                TripToSave.invoiceAmount = $('#invoiceAmount').val();
                TripToSave.invoiceNo = cleanSpaces($('#invoiceNo').val());
                TripToSave.invoicedKms = $('#invoicedKms').val();
                TripToSave.customerReferenceNo = cleanSpaces($('#customerReferenceNo').val());
                TripToSave.invoiceDate = $('#invoiceDate').val();
                TripToSave.invoiceRate = $('#invoiceRate').val();

                TripToSave.expectedCompletionDateTime = $("#expectedCompletionDate").val();
                TripToSave.diffCollectionTimeHrs = $("#diffCollectionHrs").val();
                TripToSave.diffStartTimeHrs = $("#diffStartHrs").val();
                TripToSave.diffEndTimeHrs = $("#diffEndHrs").val();

                if ($('#tripId').val().length > 0 && $('#tripId').val() > 0) {
                    TripToSave.tripID = $('#tripId').val();
                    ajaxTripUpdate(TripToSave);
                }
                else {
                    ajaxTripInsert(TripToSave);
                }
            });

            //Driver ID, Horse ID and Trailer ID
            $('#savebtnSection2').click(function () {
                //Check if Driver id has been captured
                if ($('#driverID').val().length == 0) {
                    $("#modalHeader").text("Trip Section 2 Processing Status");
                    $("#modalMessage").text("Trip Data Not Updated: Please select a valid Driver.");
                    $("#myModal").modal("show");
                    return;
                }

                //Check if Horse id has been captured
                if ($('#horseID').val().length == 0) {
                    console.log("In Horse validation");
                    $("#modalHeader").text("Trip Section 2 Processing Status");
                    $("#modalMessage").text("Trip Data Not Updated: Please select a valid Horse.");
                    $("#myModal").modal("show");
                    return;
                }

                //Check if Trailer id has been captured
                if ($('#trailerID').val().length == 0) {
                    console.log("In Trailer validation");
                    $("#modalHeader").text("Trip Section 2 Processing Status");
                    $("#modalMessage").text("Trip Data Not Updated: Please select a valid Trailer.");
                    $("#myModal").modal("show");
                    return;
                }
                $("#savebtnSection1").click();
            });

            //draw the fuel table
            $('#fuelBtnSection').click(function () {
                if (!$.fn.DataTable.isDataTable('#FuelTable')) {
                    GetFuelData();
                }
                else {
                    var oTable = $('#FuelTable').DataTable();
                    oTable.draw()
                }
            });
            //draw the Trip File table
            $('#TripFileBtnSection').click(function () {
                console.log("Trip File Button Clicked....")
                if (!$.fn.DataTable.isDataTable('#TripFileTable')) {
                    GetTripFileData();
                }
                else {
                    var oTable = $('#TripFileTable').DataTable();
                    oTable.draw()
                }
            });


            //Fuel Expenses
            $('#savebtnSection3').click(function () {
                //to save a fuel item we need a fuel rate
                //and litres which are numbers
                //Check fuel rate has been entered
                $("#modalHeader").text("Trip Section 3 Processing Status");

                //var litres = document.getElementById('litres');
                //var fuelRate = document.getElementById('fuelRate');
                //var purchaseOrderID = document.getElementById('purchaseOrderID');
                var form = document.getElementById('FuelForm');
                
                var fuelRateCheck = $("#fuelRate").hasClass("valid");
                var litresCheck = $("#litres").hasClass("valid");
                var odometreCheck = $("#odometre").hasClass("valid");
               
                //console.log("purchaseOrderID validity status :" + purchaseOrderID.validity.valid);
                //console.log("fuelRate validity status:" + $("#fuelRate").hasClass("valid"));
                console.log(fuelRateCheck);
                console.log(litresCheck);
                
                
                if (fuelRateCheck && litresCheck && odometreCheck)
                {
                    addFuelItemToTable();
                }
                else
                {
                    $("#modalMessage").text("Please ensure all validation fields are cleared. Or data has been entered. ");
                    $("#myModal").modal("show");
                    return;
                }

            });

            //Trip Times
            $('#savebtnSection4').click(function () {
                // Populate the expected and Actual Travel Times

                //Check expected Collection Date
                if ($('#expectedCollectionDate').val() != "") {
                    TripToSave.expectedCollectionDateTime = $('#expectedCollectionDate').val();
                    console.log("Expected Collection Date Time");
                    console.log(TripToSave.expectedCollectionDateTime);
                }

                //Check expected Start Date
                if ($('#expectedStartDate').val() != ""){
                    TripToSave.expectedStartDateTime = $('#expectedStartDate').val();
                    console.log("Expected Start Date Time");
                    console.log(TripToSave.expectedStartDateTime);
                }

                //Check actual Collection Date
                if ($('#actualCollectionDate').val() != "") {
                    TripToSave.actualCollectionDateTime = $('#actualCollectionDate').val();
                    console.log("Actual Collection Date Time");
                    console.log(TripToSave.actualCollectionDateTime);
                }

                //Check Actual Start Date
                if ($('#actualStartDate').val() != "") {
                    TripToSave.actualStartDateTime = $('#actualStartDate').val();
                    console.log("Actual Start Date Time");
                    console.log(TripToSave.actualStartDateTime);
                }

                //Check ActualCompletionDate
                if ($('#actualCompletionDate').val() != "") {
                    TripToSave.actualCompletionDateTime = $('#actualCompletionDate').val();
                    console.log("Actual Completion Date Time");
                    console.log(TripToSave.actualCompletionDateTime);
                }

                console.log('Trip To Save: Before Button 1 Click Runs');
                console.log(TripToSave);


                $("#savebtnSection1").click();
            });

            //Invoice Details
            $('#savebtnSection5').click(function () {

                //to save a fuel item we need a fuel rate
                //and litres which are numbers
                //Check fuel rate has been entered
                $("#modalHeader").text("Trip Section 5 Processing Status");

                if ($('#invoiceAmt').val() == "") {
                    $("#modalMessage").text("Please ensure you have a numeric number for the Invoice Amount");
                    $("#myModal").modal("show");
                    return;
                }
                if ($('#invoicedKms').val() == "") {
                    $("#modalMessage").text("Please ensure you have a numeric number for the Invoiced Kms");
                    $("#myModal").modal("show");
                    return;
                }
                if ($('#invoiceRate').val() == "") {
                    $("#modalMessage").text("Please ensure you have a numeric number for the Invoiced Kms");
                    $("#myModal").modal("show");
                    return;
                }



                $("#savebtnSection1").click();
            });
            $('#btnUpload').on('click', function () {
                //First check if a TripId exists
                if ($('#tripId').val().length == 0) {
                    $("#modalHeader").text("Trip Section 6 Processing Status");
                    $("#modalMessage").text("Please ensure you have created a Trip Before you save Fuel Data");
                    $("#myModal").modal("show");
                    return;
                }
      var files = $('#fUpload').prop("files");
      var fdata = new FormData();
      for (var i = 0; i < files.length; i++)
      {
          fdata.append("files", files[i]);
      }
        if (files.length > 0) {
            var MyAppUrlSettings = {
                MyUsefulUrl: "/UploadFiles/StreamingUpload/" + $('#tripId').val()
            };
            console.log(MyAppUrlSettings.MyUsefulUrl);
          $.ajax({
            type: "POST",
              url: MyAppUrlSettings.MyUsefulUrl,
            headers:
            {
                "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
            },
             data: fdata,
             contentType: false,
             processData: false,
             success: function (response) {
                 console.log("Trip File Item successfully inserted into database");
                 $("#modalHeader").text("Trip File Item Processing Status");
                 $("#modalMessage").text("Files were Uplaoded inserted.");
                 $("#myModal").modal("show");
                 if (!$.fn.DataTable.isDataTable('#TripFileTable')) {
                     GetTripFileData();
                 }
                 else {
                     var oTable = $('#TripFileTable').DataTable();
                     oTable.draw()
                 }
             }
          });
      }
      else {
          alert('Please select a file.')
      }
   })




        //Initialise the ExpectedStartDate for Trip Date Picker

            $(function () {

            $('#datetimepicker1').datetimepicker();
                $('#datetimepicker2').datetimepicker(
                    {
                        format: "YYYY/MM/DD hh:mm:ss A",
                        date: '@Model.Trip.ExpectedCollectionDateTime'
                    }
                );
                $('#datetimepicker3').datetimepicker(
                    {
                        format: "YYYY/MM/DD hh:mm:ss A",
                        date: '@Model.Trip.ExpectedStartDateTime'
                    }
                );
                $('#datetimepicker4').datetimepicker(
                    {
                        format: "YYYY/MM/DD hh:mm:ss A",
                        date: '@Model.Trip.ExpectedCompletionDateTime'
                    }
                );
                $('#datetimepicker5').datetimepicker(
                {
                        format: "YYYY/MM/DD hh:mm:ss A",
                        date: '@Model.Trip.ActualCollectionDateTime'
                });
                $('#datetimepicker6').datetimepicker(
                {
                        format: "YYYY/MM/DD hh:mm:ss A",
                        date: '@Model.Trip.ActualStartDateTime'
                });
                $('#datetimepicker7').datetimepicker(
                {
                        format: "YYYY/MM/DD hh:mm:ss A",
                        date: '@Model.Trip.ActualCompletionDateTime'
                });
                $('#datetimepicker8').datetimepicker(
                    {
                        format: "YYYY/MM/DD hh:mm:ss A",
                        date: '@Model.Trip.InvoiceDate'
                    }
                );
        });


        });
    </script>

}
